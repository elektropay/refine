name: npm Publish Alpha [alpha]

on:
  push:
    branches:
      - alpha

jobs:
  publish-npm:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/

      - name: npm install
        run: |
          npm ci
          npm run bootstrap
      - name: build & lint
        run: |
          npm run build
          npm run lint
      - name: test
        run: npm run test
      - name: publish alpha channel
        run: |
          npm run lerna publish from-package -- --yes --dist-tag alpha
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  admin-example:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Workflow run cleanup action
        uses: rokroskar/workflow-run-cleanup-action@v0.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: backoffice docker build
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ghcr.io
          repository: pankod/refine/refine-example
          tag_with_sha: true
          dockerfile: examples/fineFoods/admin/Dockerfile
      - name: Set up kubectl
        uses: matootie/dokube@v1.3.4
        with:
          personalAccessToken: ${{ secrets.DIGITALOCEAN_TOKEN }}
          clusterName: pankod-k8s
          expirationTime: 1200
      - name: Get nodes
        run: kubectl get nodes
      - name: Deploy refine-example to k8s
        run: |
          cd examples/fineFoods/admin
          mv ./k8s/refine-example/Chart.yaml ./k8s/refine-example/Chart.old.yaml &&
          cat ./k8s/refine-example/Chart.old.yaml | grep -v appVersion > ./k8s/refine-example/Chart.yaml &&
          echo -e "\r\nappVersion: sha-${GITHUB_SHA::7}\r\n" >> ./k8s/refine-example/Chart.yaml &&
          cat ./k8s/refine-example/Chart.yaml
          helm upgrade refine-alpha-example ./k8s/refine-example --install --atomic --values=./k8s/refine-example/values.yaml \
            --set ingress.enabled=true \
            --set ingress.annotations."kubernetes\.io/ingress\.class"=nginx \
            --set ingress.annotations."cert-manager\.io/issuer"=letsencrypt-prod \
            --set ingress.hosts[0].host=${{ env.domain }} \
            --set ingress.hosts[0].paths[0].path="/" \
            --set ingress.hosts[0].paths[0].pathType=ImplementationSpecific \
            --set ingress.tls[0].secretName=${{ env.domain }} \
            --set ingress.tls[0].hosts[0]=${{ env.domain }} \
        env:
          domain: "alpha.example.admin.refine.dev"

      - name: Send custom variable to Meercode Build
        uses: meercodeio/meercode-custom-variable@0.1.0
        with:
          meercode-token: ${{ secrets.MEERCODE_TOKEN }}
          url: 'https://alpha.example.admin.refine.dev'

  client-example:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Workflow run cleanup action
        uses: rokroskar/workflow-run-cleanup-action@v0.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: client docker build
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ghcr.io
          repository: pankod/refine/refine-client-example
          tag_with_sha: true
          dockerfile: examples/fineFoods/client/Dockerfile
      - name: Set up kubectl
        uses: matootie/dokube@v1.3.4
        with:
          personalAccessToken: ${{ secrets.DIGITALOCEAN_TOKEN }}
          clusterName: pankod-k8s
          expirationTime: 1200
      - name: Get nodes
        run: kubectl get nodes
      - name: Deploy refine-example to k8s
        run: |
          cd examples/fineFoods/client
          mv ./k8s/refine-example/Chart.yaml ./k8s/refine-example/Chart.old.yaml &&
          cat ./k8s/refine-example/Chart.old.yaml | grep -v appVersion > ./k8s/refine-example/Chart.yaml &&
          echo -e "\r\nappVersion: sha-${GITHUB_SHA::7}\r\n" >> ./k8s/refine-example/Chart.yaml &&
          cat ./k8s/refine-example/Chart.yaml
          helm upgrade client-refine-alpha-example ./k8s/refine-example --install --atomic --values=./k8s/refine-example/values.yaml \
            --set ingress.enabled=true \
            --set ingress.annotations."kubernetes\.io/ingress\.class"=nginx \
            --set ingress.annotations."cert-manager\.io/issuer"=letsencrypt-prod \
            --set ingress.hosts[0].host=${{ env.domain }} \
            --set ingress.hosts[0].paths[0].path="/" \
            --set ingress.hosts[0].paths[0].pathType=ImplementationSpecific \
            --set ingress.tls[0].secretName=${{ env.domain }} \
            --set ingress.tls[0].hosts[0]=${{ env.domain }} \
        env:
          domain: "alpha.example.refine.dev"

      - name: Send custom variable to Meercode Build
        uses: meercodeio/meercode-custom-variable@0.1.0
        with:
          meercode-token: ${{ secrets.MEERCODE_TOKEN }}
          url: 'https://alpha.example.refine.dev'
  documentation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Workflow run cleanup action
        uses: rokroskar/workflow-run-cleanup-action@v0.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: documentation docker build
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ghcr.io
          repository: pankod/refine/refine-documentation
          path: documentation
          tag_with_sha: true
      - name: Set up kubectl
        uses: matootie/dokube@v1.3.4
        with:
          personalAccessToken: ${{ secrets.DIGITALOCEAN_TOKEN }}
          clusterName: pankod-k8s
          expirationTime: 1200
      - name: Get nodes
        run: kubectl get nodes
      - name: Deploy refine-documentation to k8s
        run: |
          cd documentation
          mv ./k8s/refine-documentation/Chart.yaml ./k8s/refine-documentation/Chart.old.yaml &&
          cat ./k8s/refine-documentation/Chart.old.yaml | grep -v appVersion > ./k8s/refine-documentation/Chart.yaml &&
          echo -e "\r\nappVersion: sha-${GITHUB_SHA::7}\r\n" >> ./k8s/refine-documentation/Chart.yaml &&
          cat ./k8s/refine-documentation/Chart.yaml
          helm delete refine-alpha-documentation || :
          helm upgrade refine-alpha-documentation ./k8s/refine-documentation --install --atomic --timeout 20m0s --values=./k8s/refine-documentation/values.yaml \
            --set ingress.enabled=true \
            --set ingress.annotations."kubernetes\.io/ingress\.class"=nginx \
            --set ingress.annotations."cert-manager\.io/issuer"=letsencrypt-prod \
            --set ingress.hosts[0].host=${{ env.domain }} \
            --set ingress.hosts[0].paths[0].path="/" \
            --set ingress.hosts[0].paths[0].pathType=ImplementationSpecific \
            --set ingress.tls[0].secretName=${{ env.domain }} \
            --set ingress.tls[0].hosts[0]=${{ env.domain }} \
        env:
          domain: "alpha.refine.dev"
          branch: ${{ steps.substring-pr-branch-name.outputs.substring }}
